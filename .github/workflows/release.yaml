name: CD
on:
  push:
    tags:
      - 'v*'
jobs:
  github:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build

      - name: Read CHANGELOG
        id: changelog
        run: |
          echo "::set-output name=body::$(cat CHANGELOG.md)"

      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog.outputs.body }}

      - name: Upload assets to GitHub release
        uses: csexton/release-asset-action@v2
        with:
          pattern: "build/libs/*"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-url: ${{ steps.release.outputs.upload_url }}

  curse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Deploy to CurseForge
        run: ./gradlew curseforge -PcurseForgeApiKey=${curseforge}
        env:
          curseforge: ${{ secrets.curseforge }}
